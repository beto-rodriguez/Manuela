using System.Text;
using Microsoft.CodeAnalysis;

namespace Manuela.Generation;

public class TriggerTemplate
{
    public static void Generate(SourceProductionContext context, IGrouping<string, TriggersMap?> maps)
    {
        var first = maps.FirstOrDefault();
        if (first is null) return;

        context.AddSource(
            $"{first.ContainingTypeName}.g.cs",
            @$"// <auto-generated />
using Manuela.Expressions;

namespace {first.ContainingTypeNamespace};

public partial class {first.ContainingTypeName}
{{
    protected void InitializeTriggers()
    {{
{AsTriggers(maps)}
    }}
}}
");
    }

    private static string AsTriggers(IGrouping<string, TriggersMap?> maps)
    {
        var sb = new StringBuilder();

        var triggerCount = 0;
        foreach (var triggeredProperty in maps)
        {
            if (triggeredProperty is null) continue;

            _ = sb.Append("        ");
            _ = sb.Append(triggeredProperty.PropertyName);
            _ = sb.Append(".Triggers = v =>");
            _ = sb.Append("\r\n        [");

            var notifierCount = 0;
            foreach (var notifier in triggeredProperty.PropertiesByNotifier)
            {
                var notifierName = notifier.Key;
                if (notifier.Value.IsLambdaParameter) notifierName = "v";

                _ = sb.Append("\r\n            new(");
                _ = sb.Append(notifierName.PadRight(30));
                _ = sb.Append(", [");

                var depCount = 0;
                foreach (var dependentProperty in notifier.Value.DependentProperties)
                {
                    _ = sb.Append("\"");
                    _ = sb.Append(dependentProperty);
                    _ = sb.Append("\"");
                    if (depCount < notifier.Value.DependentProperties.Count - 1) _ = sb.Append(", ");

                    depCount++;
                }

                _ = sb.Append("])");
                if (notifierCount < triggeredProperty.PropertiesByNotifier.Count - 1) _ = sb.Append(",");

                notifierCount++;
            }

            _ = sb.Append("\r\n        ];");
            if (triggerCount < maps.Count() - 1) _ = sb.Append("\r\n");

            triggerCount++;
        }

        return sb.ToString();
    }
}
